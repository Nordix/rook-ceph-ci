import java.text.SimpleDateFormat

script {
  def date = new Date()
  def dateFormat = new SimpleDateFormat("yyyyMMddHHmmss")
  def rand = new Random()
  VM_KEY = (1..4).collect { ('a'..'z').join("")[ rand.nextInt( 26 ) ] }.join("")
  VM_NAME = "rook-ci-vm-" + dateFormat.format(date) + "-" + VM_KEY

  ci_git_branch = "main"
  ci_git_url = "https://github.com/Nordix/rook-ceph-ci.git"
  refspec = '+refs/heads/*:refs/remotes/origin/*'
}

pipeline {
    options {
        disableConcurrentBuilds()
    }
    agent { label 'ceph-rook-static-vm' }

    parameters {
        string(name: 'CEPH_IMAGE', defaultValue: 'quay.io/ceph/ceph:v19', description: 'Ceph image to test with')
    }
    stages {
      stage('SCM') {
        options {
          timeout(time: 5, unit: 'MINUTES')
        }
        steps {
            script {
              CURRENT_START_TIME = System.currentTimeMillis()
            }
            /* Checkout CI Repo */
            checkout([$class: 'GitSCM',
            branches: [
              [name: ci_git_branch]
            ],
            doGenerateSubmoduleConfigurations: false,
            extensions: [
              [$class: 'WipeWorkspace'],
              [$class: 'CleanCheckout'],
              [$class: 'CleanBeforeCheckout']
            ],
            submoduleCfg: [],
            userRemoteConfigs: [[url: ci_git_url, refspec: refspec]]
            ])
        }
      }
      stage('Run integration tests') {
        steps {
          withCredentials([sshUserPrivateKey(credentialsId: 'metal3ci_city_cloud_ssh_keypair', keyFileVariable: 'ROOK_CI_USER_KEY')]) {
            withCredentials([ usernamePassword(credentialsId: 'xerces-est-metal3ci', usernameVariable: 'OS_USERNAME', passwordVariable: 'OS_PASSWORD')]) {
                sh "./rook-ceph-ci/vm_create/vm_create.sh"
            }
          }
        }
      }
      stage('Clean test') {
        steps {
          withCredentials([sshUserPrivateKey(credentialsId: 'metal3ci_city_cloud_ssh_keypair', keyFileVariable: 'ROOK_CI_USER_KEY')]) {
             sh "echo 'Cleaning VM'"
          }
        }
      }
    }
}
